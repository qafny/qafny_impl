// Quantum Teleporation
// https://en.wikipedia.org/wiki/Quantum_teleportation

method Teleporation(q: Q[1], p: Q[1], r: Q[1]) returns (y:nat, prob:real)
    requires { p[0] : nor ↦ |0⟩ }
    requires { r[0] : nor ↦ |0⟩ }
    ensures { r == q  }//qubit q[0] is teleported to r[0]
{
    p[0] *= H;
    if (p[0]) { r[0]  *= λ (x => |(x + 1) % 2⟩); }
    assert { p[0],r[0] : en ↦ ∑ k ∈ [0 , 2) . 1/sqrt(2) |k⟩|k⟩ } ; //this assetion should not be needed
    
    if (q[0]) { p[0]  *= λ (x => |(x + 1) % 2 ⟩); }
    
    q[0] *= H;

    y,p1 *= measure(p[0]); //y = j ⊕ k and p1 is igoared, it should be 1/2

    z,p2 *= measure(q[0]); // z == 0 || z == 1, and p2 = 1/2
    
    if (y==1) { r[0] *= λ (x => |(x + 1) % 2⟩); } //permit viewing a bit as a bool value, an X gate
    
    if (z==1) { r[0] *= λ (x => ω (1 * x, 2)); } //a Z gate

}
