
method conditionaltest2(n:nat, q : Q[1], p : Q[n], base: nat, N:nat)
  requires { q[0] : had ↦ |+⟩ }
  requires { p[0, n) : nor ↦ |0⟩ }
 // ensures  { q[0, 1), p [0, n) : en(2) ↦ 1/sqrt(2) |0⟩|0⟩ + ∑ k ∈ [0, 2^n) . 1/sqrt(2) * 1/sqrt(2^n)|1⟩ |k⟩}
  ensures { q[0, 1), p [0, n) : en(2) ↦ ∑ k ∈ [0, 2) @(k == 0). ∑ j ∈ [0, 2^n). 1/sqrt(2) |k⟩ |0⟩ + ∑ k ∈ [0, 2) @(k == 1). ∑ j ∈ [0, 2^n) . 1/sqrt(2^(n+1)) |k⟩ |j⟩}
  //might need a lemma to handle the "disappearing" amplitide, otherwise make j in [0, 1)
  //aa(1) ↦ ∑ j ∈ [0, 2^n) . 1/sqrt(2) |0⟩ |0⟩ + ∑ j ∈ [0, 2^n) . 1/sqrt(2^(n+1)) |1⟩ |j⟩
{
  if (q[0]) { p[0, n) *= H; }
}
