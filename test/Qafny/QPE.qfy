//This is the QPE algorithm file. 
//the source is in https://en.wikipedia.org/wiki/Quantum_phase_estimation_algorithm
//ODO: Alex, I am putting the Simon's algorithm code here, because I think the structure is very similar.
//Please look at the wiki and try to modify the code to be a phase estimation.
//lambda value here is the eigenvalue for U, so you will need to say the eigen value property about U here.
method QPE(n:nat, q : Q[n], p : Q[n], r : Q[1], u : Q[1], N:nat)
  requires { q[0,n), p[0,n) : en(2) ↦ ∑ k ∈ [0, 2^n) . ∑ j ∈ [0, 2^n) . 1/2^n | k ⟩ | j ⟩ }
  requires { r [0] : nor ↦ |0⟩ }
  requires { u [0] : nor ↦ |0⟩ }
  ensures  { q[0,n), p[0,n), u[0, 1), r[0, 1) : en(3) ↦ ∑ k ∈ [0, 2^n) . ∑ j ∈ [0, 2^n)@(j < N) . ∑ i ∈ [0, 2) . 1/2^n * (1/sqrt(2^1))  | k ⟩ | j ⟩ | 1 ⟩ | i ⟩ + ∑ k ∈ [0, 2^n) . ∑ j ∈ [0, 2^n)@ (not (j < N) ) . ∑ i ∈ [0, 2) . 1/2^n | k ⟩ | j ⟩ | 0 ⟩ | 0 ⟩ }
{
  // induce superposition on the first qubit
  if (p[0,n) < N @ u[0]) { r[0] *= H; }
  //(en)q[0,n); //it is best if we do not need this
}
