
method DeutschJozsa(q : Q[n], p : Q[1], n : nat, f : nat -> bool) returns ( k : nat, prob : real)
  requires n >= 1
  requires { q[0,n) : nor ↦ |0⟩  }
  requires { p[0] : nor ↦ |1⟩  }
  requires balance(f) || constant(f)
  ensures balance(f) && k == 0 ==> prob == 0
  ensures constant(f) && k == 1 ==> prob == 1
{
  q[0, n) *= H;
  p[0] *= H;

  q[0,n), p[0] *= λ (x, y => |x⟩ |(y + f(x))⟩);
  assert { q[0 , n), p[0] : en ↦ ∑ i ∈  [0, 2 ^ n) . 1 / sqrt(2^n) * ω (f(i), 2) |i⟩ |-⟩ };

  q[0, n) *= H;
  assert { q[0 , n) , p[0] : en(2) ↦ ∑ j ∈ [0, 2 ^ n) . ∑ i ∈ [0 , 2 ^ n) . 1 / sqrt(2^n) * ω (f(i) + i * j, 2)  |j⟩ |-⟩ };
  prob, k *= measure(q[0,n));
}

