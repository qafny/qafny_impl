// Amplitude estimation without phase estimation
// https://arxiv.org/pdf/1904.10246.pdf

// M is length of m
// Q contains phi
method AEwoPE(q : Q[n], Q:[Bool]->[Bool], n:nat, m:array<nat>, shots:nat, M:nat) returns (ML: real)
   //
{   
  // repeatedly apply Q to q
  // num = shots

  H = array<nat>[shots];
  T = array<real>[shots];

  k := 0;
  while k < shots
  {
    q[0, n) *= Q;

    h, theta *= measure(q);

    H[k] := h;
    T[k] := theta;

    k := k + 1;
  }

  // find the value of theta that maximizes the product of all Likelihood functions

  k := 0;
  max := 0;
  while k < shots
  {
    j := 0;
    prod := 1;
    while j < shots
    {
        prod := prod * Likelihood(h[j], T[k], m, k, M);
        j := j + 1;
    }

    if prod > max 
    {
        max := k;
    }

    k := k + 1;
  }
  
  ML := sin(T[max])^2;

}

function Likelihood(h:nat, theta:real, m:nat, N:nat) returns (y:real)
{
    return (sin((2 * m[k] + 1) * theta)^2)^h * (cos((2 * m[k] + 1) * theta)^2)^(N - h)
}